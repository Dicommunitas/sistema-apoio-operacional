/**
 * Entidade Problema.
 * @author Diego.
 */
entity Problema {
	/**
	* Atributo descrição.
	*/
    descricao String required,
    criticidade Criticidade required,
    aceitarFinalizacao SimNao,
    foto ImageBlob maxbytes(500)
    //criadoPor User,
    //atualizadoPor User,
    //criadoEm DateTime,
    //atualizadoEm DateTime
}

/**
 * Entidade Status.
 * @author Diego.
 */
entity Status {
	/**
	* Atributo descrição.
	*/
    descricao String required,
	/**
	* Atributo prazo deve ser do mesmo tipo de createdAt e updetedAt.
	*/
    prazo ZonedDateTime required,
    solicitarFinalizacao SimNao
    //criadoPor User,
    //atualizadoPor User,
    //criadoEm DateTime,
    //atualizadoEm DateTime
}

/**
 * Entidade Criticidade.
 * @author Diego.
 */
enum Criticidade {
    BAIXA, MEDIA, ALTA, URGENTE
}

/**
 * Entidade SimNao.
 * @author Diego.
 */
enum SimNao {
    SIM, NAO
}

//definindo vários relacionamentos OneToMany com comentários
relationship OneToMany {
	Problema{problema} to Status
	Status{responsavel1} to User
	Status{responsavel2} to User
}

/**
 * Entidade Relatorio.
 * @author Diego.
 * Na tela de visualização de um relatório
 * deve ser mostrado uma lista das operações com fim em branco
 * ou início em até 12 horas antes da criação do relatório,
 * uma lista dos problemas com o campo aceitarFinalizacao em falso 
 * e uma lista das amostras criadas em até 12 horas antes da
 * criação do relatório.
 */
entity Relatorio {
	/**
	* Atributo descrição.
	*/
    descricao TextBlob required
    //criadoPor User,
    //atualizadoPor User,
    //criadoEm DateTime,
    //atualizadoEm DateTime
}

/**
 * Entidade TipoRelatorio.
 * @author Diego.
 */
entity TipoRelatorio {
	/**
	* Atributo descrição.
	*/
    descricao String required
}

entity User {
}

/**
 * Entidade Amostra.
 * @author Diego.
 */
entity Amostra {
	/**
	* Atributo dataHora.
	*/
	dataHora Instant required,
    observacao String,
	identificacaoOutroSistema String,
    amostraNoLaboratorio SimNao
    //criadoPor User,
    //atualizadoPor User,
    //criadoEm DateTime,
    //atualizadoEm DateTime
}

/**
 * Entidade Operação.
 * @author Diego.
 */
entity Operacao {
	/**
	* Atributo descrição.
	*/
    descricao String required,
	inicio Instant,
	fim Instant,
	quantidadeAmostras Integer required,
	observacao String
    //criadoPor User,
    //atualizadoPor User,
    //criadoEm DateTime,
    //atualizadoEm DateTime
}

/**
 * Entidade OrigemAmostra.
 * @author Diego.
 */
entity OrigemAmostra {
	/**
	* Atributo descrição.
	*/
    descricao String required,
}

/**
 * Entidade TipoAmostra.
 * @author Diego.
 */
entity TipoAmostra {
	/**
	* Atributo descrição.
	*/
    descricao String required,
}

/**
 * Entidade FinalidadeAmostra.
 * @author Diego.
 */
entity FinalidadeAmostra {
	/**
	* Atributo lacre.
	*/
    lacre String required,
}

/**
 * Entidade TipoFinalidadeAmostra.
 * @author Diego.
 */
entity TipoFinalidadeAmostra {
	/**
	* Atributo descrição.
	*/
    descricao String required,
}

//definindo vários relacionamentos ManyToOne com comentários
relationship ManyToOne {
	Operacao{operacao} to Amostra,
	/**
	* Um relacionamento
	*/
	OrigemAmostra{origemAmostra} to Amostra,
	TipoAmostra{tipoAmostra} to Amostra,
    TipoFinalidadeAmostra{tipoFinalidadeAmostra} to FinalidadeAmostra,
    TipoRelatorio{tipoRelatorio} to Relatorio
}

//definindo vários relacionamentos OneToMany com comentários
relationship OneToMany {
	/**
	* Um relacionamento
	*/
	Amostra{amostra} to
	/**
	* Outro lado do mesmo relacionamento
	*/
    FinalidadeAmostra,
	Amostra{responsavel} to User
}

// Definir opções de paginação
paginate Amostra, Operacao, Problema with pagination
paginate FinalidadeAmostra, Relatorio, Status with infinite-scroll

// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl //except Empregado, Trabalho

// Set an angular suffix
// angularSuffix * with mySuffix
